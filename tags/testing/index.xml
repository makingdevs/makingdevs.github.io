<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>testing on Blog de Making Devs</title>
    <link>http://blog.makingdevs.com/tags/testing/</link>
    <description>Recent content in testing on Blog de Making Devs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 22 Sep 2016 15:06:05 -0500</lastBuildDate>
    
	<atom:link href="http://blog.makingdevs.com/tags/testing/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Presentación en Android Nights</title>
      <link>http://blog.makingdevs.com/2016/09/22/presentaci%C3%B3n-en-android-nights/</link>
      <pubDate>Thu, 22 Sep 2016 15:06:05 -0500</pubDate>
      
      <guid>http://blog.makingdevs.com/2016/09/22/presentaci%C3%B3n-en-android-nights/</guid>
      <description>El pasado 18 de Agosto de 2016 tuvimos la oportunidad de presentar un conjunto de ideas en la Activity #15, creando una aplicación con el lenguaje Groovy como herramienta principal. Lo importante de esta presentación fue el conjunto de técnicas que ocupamos con ayuda del lenguaje dinámico Groovy combinando lo que mucha gente ya conoce en Java pero de una forma divertida, inclusivo descubrimos algunos patrones que en iOS son más naturales.</description>
    </item>
    
    <item>
      <title>Pruebas funcionales con Geb y Spock</title>
      <link>http://blog.makingdevs.com/2016/03/07/pruebas-funcionales-con-geb-y-spock/</link>
      <pubDate>Mon, 07 Mar 2016 23:47:26 -0500</pubDate>
      
      <guid>http://blog.makingdevs.com/2016/03/07/pruebas-funcionales-con-geb-y-spock/</guid>
      <description>Las pruebas funcionales se utilizan para verificar que los flujos de una aplicación que se definen en los casos de uso o historias de usuario funcionen correctamente; son pruebas difíciles de implementar ya que deben realizarse desde la perspectiva del usuario y muchas veces las interfaces de usuario cambian constantemente.
Geb es una herramienta para escribir pruebas funcionales con Groovy que hace uso del WebDriver de Selenium para la automatizacion del navegador y toma varias ideas de la biblioteca jQuery para la interacción con los elementos.</description>
    </item>
    
  </channel>
</rss>